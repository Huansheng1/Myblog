(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{541:function(t,s,a){"use strict";a.r(s);var e=a(65),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"事件循环与任务队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件循环与任务队列"}},[t._v("#")]),t._v(" 事件循环与任务队列")]),t._v(" "),a("h2",{attrs:{id:"同步代码的执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同步代码的执行"}},[t._v("#")]),t._v(" 同步代码的执行")]),t._v(" "),a("blockquote",[a("p",[t._v("同步代码这节直接复制自 参考资料的 "),a("strong",[t._v("理解Javascript的异步")]),t._v("，图画的太好了我就不自己弄了。")])]),t._v(" "),a("h3",{attrs:{id:"执行上下文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文"}},[t._v("#")]),t._v(" 执行上下文")]),t._v(" "),a("p",[t._v("所谓的执行上下文是 "),a("code",[t._v("Javascript")]),t._v(" 代码执行环境中的一个抽象的概念。 "),a("code",[t._v("Javascript")]),t._v(" 任何代码都是在执行上下文中执行的。\n函数内部的代码会在函数执行上下文中执行，全局的代码会在全局执行上下文中执行，每一个函数都有自己的执行上下文。")]),t._v(" "),a("h3",{attrs:{id:"执行栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行栈"}},[t._v("#")]),t._v(" 执行栈")]),t._v(" "),a("p",[t._v("顾名思义执行栈是一种后进先出( "),a("code",[t._v("LIFO")]),t._v(" )的栈结构，它用来存储在代码执行阶段创建的所有的执行上下文。\n基于单线程的原因， "),a("code",[t._v("Javascript")]),t._v(" 只有一个执行栈，因为是基于栈结构所以只能从栈的顶层添加或是删除执行上下文。")]),t._v(" "),a("blockquote",[a("p",[t._v("函数调用形成了一个由若干帧组成的栈。")])]),t._v(" "),a("h3",{attrs:{id:"代码分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码分析"}},[t._v("#")]),t._v(" 代码分析")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("second")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello there!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("first")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hi there!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("second")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'The End'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("first")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Huansheng1/myimg/PicGo/20200720175423.png",alt:""}})]),t._v(" "),a("details",[a("summary",[t._v("个人解析")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("script")]),t._v("开始执行，全局执行上下文创建并被压入执行栈")]),t._v(" "),a("li",[a("code",[t._v("first")]),t._v("函数被调用，它的执行上下文被创建并被压入执行栈，首句"),a("code",[t._v("console.log('Hi there!');")]),t._v("代码开始执行，"),a("code",[t._v("console.log")]),t._v("函数上下文压入执行栈")]),t._v(" "),a("li",[a("code",[t._v("console.log('Hi there!');")]),t._v("代码执行完毕，其上下文从执行栈弹出，"),a("code",[t._v("second")]),t._v("函数被调用，创建其上下文压入执行栈，"),a("code",[t._v("console.log('Hello there!');")]),t._v("代码执行，其上下文创建并压入执行栈顶，开始执行")]),t._v(" "),a("li",[t._v("执行完毕，执行栈将栈顶上下文弹出，然后继续将"),a("code",[t._v("second")]),t._v("上下文也弹出栈顶，将"),a("code",[t._v("console.log('The End');")]),t._v("压入执行栈，开始执行")]),t._v(" "),a("li",[t._v("执行完毕，将上下文挨个弹出栈顶，清空执行栈。")])]),t._v(" "),a("blockquote",[a("p",[t._v("注意， "),a("code",[t._v("console.log")]),t._v(" 也是函数，因此其被调用也会创建上下文并被压入执行栈。")])])]),t._v(" "),a("h2",{attrs:{id:"定时器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定时器"}},[t._v("#")]),t._v(" 定时器")]),t._v(" "),a("p",[t._v('定时事件，即指定某些代码在多少时间之后执行。这叫做"定时器"（ '),a("code",[t._v("timer")]),t._v(" ）功能，也就是定时执行的代码。")]),t._v(" "),a("p",[t._v("定时器功能主要由 "),a("code",[t._v("setTimeout()")]),t._v(" 和 "),a("code",[t._v("setInterval()")]),t._v(" 这两个函数来完成，它们的内部运行机制完全一样，区别在于前者指定的代码是一次性执行，后者则为反复执行。以下主要讨论 "),a("code",[t._v("setTimeout()")]),t._v(" 。")]),t._v(" "),a("p",[a("strong",[t._v("HTML5标准规定了 "),a("code",[t._v("setTimeout()")]),t._v(" 的第二个参数的最小值（最短间隔），不得低于4毫秒")]),t._v("，如果低于这个值，就会自动增加。在此之前，老版本的浏览器都将最短间隔设为10毫秒。另外，对于那些DOM的变动（尤其是涉及页面重新渲染的部分），通常不会立即执行，而是每16毫秒执行一次。这时使用 "),a("code",[t._v("requestAnimationFrame()")]),t._v(" 的效果要好于setTimeout()。")]),t._v(" "),a("p",[t._v("需要注意的是， "),a("code",[t._v("setTimeout()")]),t._v(' 只是将事件插入了"任务队列"，必须等到当前代码（执行栈）执行完，主线程才会去执行它指定的回调函数。要是当前代码耗时很长，有可能要等很久，所以并没有办法保证，回调函数一定会在 '),a("code",[t._v("setTimeout()")]),t._v(" 指定的时间执行。")]),t._v(" "),a("p",[t._v("但是，经过测试，谷歌浏览器上 "),a("code",[t._v("1ms")]),t._v(" 比 "),a("code",[t._v("0ms")]),t._v(" 和其他数字更快（IE、火狐等则正常）：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("timeEnd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("timeEnd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("timeEnd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[t._v("结果：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.39501953125")]),t._v(" ms\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.4130859375")]),t._v(" ms\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.4521484375")]),t._v(" ms\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("原因：")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-settimeout",target:"_blank",rel:"noopener noreferrer"}},[t._v("需要同时满足嵌套层级超过 5 层，timeout 小于 4ms，才会设置 4ms"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("不同浏览器的最低时延会不一致，"),a("code",[t._v("Chrome")]),t._v(" 的最低时延是 "),a("code",[t._v("1ms")]),t._v("。")])]),t._v(" "),a("blockquote",[a("p",[t._v("注意：有个小细节，如果第一个参数不传函数，那么它会采取类似 "),a("code",[t._v("eval")]),t._v(" 的方式执行这个值，所以不会报错且能正常执行："),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Huansheng1/myimg/PicGo/20210531203943.png",alt:""}})])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所以以下都是会正常执行的，不要惊讶哦")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"alert('sad')\"")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("111")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("更多：")]),t._v(" "),a("ul",[a("li",[t._v("推荐："),a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/155752686",target:"_blank",rel:"noopener noreferrer"}},[t._v("为什么 setTimeout 有最小时延 4ms ?"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/setTimeout",target:"_blank",rel:"noopener noreferrer"}},[t._v("window.setTimeout - Web API 接口参考 | MDN"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"事件循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件循环"}},[t._v("#")]),t._v(" 事件循环")]),t._v(" "),a("p",[t._v("事件循环 "),a("code",[t._v("Event Loop")])]),t._v(" "),a("p",[t._v("为了协调事件、用户交互、脚本、UI 渲染和网络处理等行为，防止主线程的不阻塞， "),a("code",[t._v("Event Loop")]),t._v(" 的方案应用而生。 "),a("code",[t._v("Event Loop")]),t._v(" 包含两类：一类是基于 "),a("code",[t._v("Browsing Context")]),t._v(" ，一种是基于 "),a("code",[t._v("Worker")]),t._v(" 。二者的运行是独立的，也就是说，每一个 "),a("code",[t._v("JavaScript")]),t._v(' 运行的"线程环境"都有一个独立的 '),a("code",[t._v("Event Loop")]),t._v(" ，每一个 "),a("code",[t._v("Web Worker")]),t._v(" 也有一个独立的 "),a("code",[t._v("Event Loop")]),t._v(" 。")]),t._v(" "),a("blockquote",[a("p",[t._v("本文所涉及到的事件循环是基于 "),a("code",[t._v("Browsing Context")]),t._v(" 。")])]),t._v(" "),a("p",[t._v("所谓的事件循环机制，就是浏览器提供一个线程（例如nodejs线程，例如android下的主线程）专门用于接收和缓存消息（从消息队列）、循环提取（从 "),a("code",[t._v("Loop")]),t._v(" 循环）和回调消息，而另外一些线程则用于执行具体的耗时任务，执行完了，再发送消息（缓存到消息队列）以图谋事件回调。\n"),a("a",{attrs:{href:"https://juejin.im/post/5b24b116e51d4558a65fdb70#heading-5",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Huansheng1/myimg/PicGo/20200719144946.png",alt:""}}),a("OutboundLink")],1),t._v("\n实际上，主线程只会做一件事情，就是从消息队列里面取消息、执行消息，再取消息、再执行。当消息队列为空时，就会等待直到消息队列变成非空。而且主线程只有在将当前的消息执行完成后，才会去取下一个消息。这种机制就叫做事件循环机制，取一个消息并执行的过程叫做一次循环。")]),t._v(" "),a("p",[t._v("注意，每次取的消息其实指的是宏任务 "),a("code",[t._v("macrotask")]),t._v(" ，官方其实称为 "),a("code",[t._v("task")]),t._v(" ；具体分类与运行机制我们会在后面详说。")]),t._v(" "),a("blockquote",[a("p",[t._v("宏任务 "),a("code",[t._v("task")]),t._v(" 的回调函数，一定不在当前这一轮事件循环中执行。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Huansheng1/myimg/PicGo/20200717183821.png",alt:""}})]),t._v(" "),a("p",[t._v("参考：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000004322358",target:"_blank",rel:"noopener noreferrer"}},[t._v("彻底理解同步、异步和事件循环(Event Loop)"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/dwqs/blog/issues/61",target:"_blank",rel:"noopener noreferrer"}},[t._v("从一道题浅说 JavaScript 的事件循环"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/EventLoop",target:"_blank",rel:"noopener noreferrer"}},[t._v("并发模型与事件循环 - JavaScript | MDN"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"任务队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#任务队列"}},[t._v("#")]),t._v(" 任务队列")]),t._v(" "),a("p",[t._v("任务队列 "),a("code",[t._v("Task Queue")]),t._v(" ，也称：消息队列、 "),a("code",[t._v("Callback Queue")])]),t._v(" "),a("p",[t._v("任务/消息：注册异步任务时添加的回调函数。")]),t._v(" "),a("p",[t._v("任务分为两种：")]),t._v(" "),a("ul",[a("li",[t._v("宏任务"),a("code",[t._v("macrotask")]),t._v("，也称为"),a("code",[t._v("task")])])]),t._v(" "),a("blockquote",[a("p",[t._v("宏任务主要包含： "),a("code",[t._v("script")]),t._v(" (整体代码)、 "),a("code",[t._v("setTimeout")]),t._v(" 、 "),a("code",[t._v("setInterval")]),t._v(" 、 "),a("code",[t._v("I/O")]),t._v(" (网络请求等)、 "),a("code",[t._v("UI")]),t._v(" 交互事件、 "),a("code",[t._v("setImmediate")]),t._v(" ( "),a("code",[t._v("Node.js")]),t._v(" 环境)")])]),t._v(" "),a("ul",[a("li",[t._v("微任务"),a("code",[t._v("microtask")]),t._v("，也称"),a("code",[t._v("jobs")])])]),t._v(" "),a("blockquote",[a("p",[t._v("微任务主要包含： "),a("code",[t._v("Promise")]),t._v(" 、 "),a("code",[t._v("MutaionObserver")]),t._v(" 、 "),a("code",[t._v("process.nextTick")]),t._v(" ( "),a("code",[t._v("Node.js")]),t._v(" 环境)")])]),t._v(" "),a("p",[t._v("一个 "),a("code",[t._v("Event Loop")]),t._v(" 中，可以有一个或者多个任务队列( "),a("code",[t._v("task queue")]),t._v(" )，一个任务队列便是一系列有序任务(task)的集合；每个任务都有一个任务源( "),a("code",[t._v("task source")]),t._v(" )，源自同一个任务源的 "),a("code",[t._v("task")]),t._v(" 必须放到同一个任务队列，从不同源来的则被添加到不同队列。")]),t._v(" "),a("p",[t._v("注意：")]),t._v(" "),a("ul",[a("li",[t._v("事件队列严格按照时间先后顺序将任务压入执行栈执行")]),t._v(" "),a("li",[t._v("当执行栈为空时，浏览器会一直不停的检查事件队列，如果不为空，则取出第一个任务；")]),t._v(" "),a("li",[t._v("在每一个任务结束之后，浏览器会对页面进行渲染；")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://stackoverflow.com/questions/43050448/when-will-requestanimationframe-be-executed",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("requestAnimationFrame")]),t._v("不属于"),a("code",[t._v("task")]),a("OutboundLink")],1),t._v("，它是浏览器渲染过程的一步，和"),a("code",[t._v("task／microtask")]),t._v("的执行是分离的")])]),t._v(" "),a("p",[t._v("参考：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.w3.org/TR/2017/REC-html52-20171214/webappapis.html#event-loops",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTML 5.2: 7. Web application APIs"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/dong-xu/p/7000163.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解 JavaScript 事件循环（一）— event loop"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"运行机制分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行机制分析"}},[t._v("#")]),t._v(" 运行机制分析")]),t._v(" "),a("p",[a("code",[t._v("Event Loop")]),t._v(" (事件循环)中，每一次循环称为 "),a("code",[t._v("tick")]),t._v(" , 每一次tick的任务如下：")]),t._v(" "),a("ol",[a("li",[t._v("浏览器检查事件队列，如果不为空，则取出队列第一个宏任务"),a("code",[t._v("macrotask")]),t._v("，压入执行栈；通常"),a("code",[t._v("script")]),t._v("是最先进入队列的宏任务，位于宏任务队列首部。")]),t._v(" "),a("li",[t._v("宏任务执行完毕后，检查微任务队列当前是否存在 "),a("code",[t._v("Microtask")]),t._v("微任务，如果存在则从"),a("code",[t._v("microtask")]),t._v("队列取出微任务，直至 "),a("code",[t._v("microtask")]),t._v(" 队列任务为空")]),t._v(" "),a("li",[t._v("更新"),a("code",[t._v("render")]),t._v("(每一次事件循环，浏览器都可能会去更新渲染)")]),t._v(" "),a("li",[t._v("检查是否有"),a("code",[t._v("Web Worker")]),t._v("任务，有则执行")]),t._v(" "),a("li",[t._v("重复以上步骤")])]),t._v(" "),a("p",[t._v("注意：")]),t._v(" "),a("ul",[a("li",[t._v("一般宏任务执行的时候可能产生微任务，而微任务只有产生了就会被加到"),a("code",[t._v("MicroTask Queue")]),t._v("队列尾部")]),t._v(" "),a("li",[t._v("不管什么任务执行完毕，都会先去获取微任务；没有微任务方继续取出宏任务执行")]),t._v(" "),a("li",[t._v("宏任务每次只取出一个执行，而微任务则全部执行完毕才罢休")]),t._v(" "),a("li",[t._v("准确来说，"),a("code",[t._v("promise.then/cath /finally")]),t._v("才属于微任务")])]),t._v(" "),a("p",[t._v("因此，我们可以推导出：宏任务 "),a("code",[t._v("setTimeout()")]),t._v(" 在下一轮“事件循环”开始时执行，微任务 "),a("code",[t._v("Promise.resolve()")]),t._v(" 在本轮“事件循环”结束时执行，宏任务 "),a("code",[t._v("script")]),t._v(" 作为 "),a("code",[t._v("JavaScript")]),t._v(" 入口则立即执行。")]),t._v(" "),a("h2",{attrs:{id:"浏览器事件循环总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器事件循环总结"}},[t._v("#")]),t._v(" 浏览器事件循环总结")]),t._v(" "),a("p",[t._v("消息队列：一个先进先出的队列，它里面存放着各种消息。")]),t._v(" "),a("p",[t._v("事件循环：主线程重复从消息队列中取消息、执行的过程。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.processon.com/view/link/5f141dfa6376895d7fb8777c",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Huansheng1/myimg/PicGo/20200720184008.png",alt:""}}),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("简单执行顺序如下：")]),t._v(" "),a("ol",[a("li",[t._v("执行同步代码，这是宏任务"),a("code",[t._v("script")])]),t._v(" "),a("li",[t._v("执行栈为空，查询是否有微任务要执行，如果有则压入执行栈执行")]),t._v(" "),a("li",[t._v("必要时渲染"),a("code",[t._v("UI")])]),t._v(" "),a("li",[t._v("进行下一轮的 "),a("code",[t._v("EventLoop")]),t._v(" ，执行宏任务中的异步代码")])]),t._v(" "),a("h2",{attrs:{id:"node-js事件循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js事件循环"}},[t._v("#")]),t._v(" Node Js事件循环")]),t._v(" "),a("blockquote",[a("p",[t._v("待更新...")])]),t._v(" "),a("p",[t._v("更多：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://juejin.im/post/5e5c7f6c518825491b11ce93",target:"_blank",rel:"noopener noreferrer"}},[t._v("面试题：说说事件循环机制(满分答案来了)"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2014/10/event-loop.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 运行机制详解：再谈Event Loop - 阮一峰的网络日志"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5e50ae5d6fb9a07cb96ae8ac",target:"_blank",rel:"noopener noreferrer"}},[t._v("理解Javascript的异步"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/wu_xianqiang/article/details/105837869",target:"_blank",rel:"noopener noreferrer"}},[t._v("彻底理解js是单线程的"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5b24b116e51d4558a65fdb70",target:"_blank",rel:"noopener noreferrer"}},[t._v("Js 的事件循环(Event Loop)机制以及实例讲解"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000016278115",target:"_blank",rel:"noopener noreferrer"}},[t._v("带你彻底弄懂Event Loop"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);