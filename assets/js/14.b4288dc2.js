(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{436:function(s,a,e){"use strict";e.r(a);var t=e(65),n=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"docker容器个人使用记录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker容器个人使用记录"}},[s._v("#")]),s._v(" docker容器个人使用记录")]),s._v(" "),e("blockquote",[e("p",[s._v("环境：CentOs8环境为准")])]),s._v(" "),e("h2",{attrs:{id:"初体验"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初体验"}},[s._v("#")]),s._v(" 初体验")]),s._v(" "),e("h3",{attrs:{id:"相关网站"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#相关网站"}},[s._v("#")]),s._v(" 相关网站")]),s._v(" "),e("ul",[e("li",[s._v("docker仓库："),e("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("搜索想要的镜像仓库"),e("OutboundLink")],1)]),s._v(" "),e("li",[s._v("免费docker部署网站："),e("a",{attrs:{href:"https://www.heroku.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Cloud Application Platform | Heroku"),e("OutboundLink")],1)])]),s._v(" "),e("h3",{attrs:{id:"安装docker环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装docker环境"}},[s._v("#")]),s._v(" 安装docker环境")]),s._v(" "),e("h4",{attrs:{id:"前期准备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前期准备"}},[s._v("#")]),s._v(" 前期准备")]),s._v(" "),e("ol",[e("li",[s._v("使用 root 权限登录 Centos。确保 yum 包更新到最新：")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum update\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("安装的yum工具集：")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("yum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y yum-utils\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h4",{attrs:{id:"手动安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#手动安装"}},[s._v("#")]),s._v(" 手动安装")]),s._v(" "),e("ol",[e("li",[s._v("安装docker-ce的yum源:")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("安装docker-ce")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("dnf "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker-ce\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者用yum安装")]),s._v("\n\nyum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker-ce\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("ol",{attrs:{start:"3"}},[e("li",[s._v("查看docker服务状态:")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("systemctl status docker.service\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ol",{attrs:{start:"4"}},[e("li",[s._v("开启"),e("code",[s._v("docker")]),s._v("自启动:")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("systemctl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" docker.service\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ol",{attrs:{start:"5"}},[e("li",[s._v("开启"),e("code",[s._v("docker")]),s._v("服务:")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("systemctl start docker.service\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h4",{attrs:{id:"一键安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一键安装"}},[s._v("#")]),s._v(" 一键安装")]),s._v(" "),e("ol",[e("li",[s._v("安装"),e("code",[s._v("docker")]),s._v("环境：")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用官方安装脚本自动安装")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#安装命令如下：")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -fsSL https://get.docker.com "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" -s "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" --mirror Aliyun\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#也可以使用国内 daocloud 一键安装命令：")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -sSL https://get.daocloud.io/docker "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#以上二选一即可")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("开启"),e("code",[s._v("docker")]),s._v("开机自启：")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#建议docker开机自启")]),s._v("\nsystemctl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h3",{attrs:{id:"查看docker信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看docker信息"}},[s._v("#")]),s._v(" 查看docker信息")]),s._v(" "),e("p",[s._v("该命令会返回所有容器和镜像的数量、Docker使用的执行驱动和存储驱动以及Docker的基本配置："),e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Huansheng1/myimg/PicGo/20210718125623.png",alt:""}})]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" info\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"拉取安装镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拉取安装镜像"}},[s._v("#")]),s._v(" 拉取安装镜像")]),s._v(" "),e("p",[s._v("如图，我们选择了一个 "),e("code",[s._v("qinglong")]),s._v(" 镜像（docker仓库里可以查看搜索），将它拉取到本地：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pull whyour/qinglong:latest\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"根据镜像创建并启动容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#根据镜像创建并启动容器"}},[s._v("#")]),s._v(" 根据镜像创建并启动容器")]),s._v(" "),e("h4",{attrs:{id:"根据镜像创建并启动容器-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#根据镜像创建并启动容器-2"}},[s._v("#")]),s._v(" 根据镜像创建并启动容器")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# container可省略，这里我们拉取了ubuntu镜像")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" container run -it ubuntu:latest /bin/bash\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("注意，如果容器名不能重复，创建容器时默认会生成一个容器名，而生成容器名的策略，据我观察大概是：")]),s._v(" "),e("ul",[e("li",[s._v("如果根据镜像创建会默认查找是否有镜像名的容器，如果没有，则根据镜像名创建容器名，如果已有镜像名容器则产生个 随机容器名")])]),s._v(" "),e("blockquote",[e("p",[s._v("Docker会为我们创建的每一个容器自动生成一个随机的名称。如果想为容器指定一个名称，而不是使用自动生成的名称，则可以用—name标志来实现：")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run --name 容器名 -i -t 镜像名 /bin/bash\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("如果我们试图创建两个名称相同的容器，则命令失败。如果要使用的容器名称已经存在，可以先用 "),e("code",[s._v("docker rm")]),s._v(" 命令删除已有的同名容器后，再来创建新的容器。")]),s._v(" "),e("p",[s._v("上面创建的容器都属于 "),e("code",[s._v("交互式运行")]),s._v(" 的容器，如果容器内进程没有能常驻后台的，当你在终端执行 "),e("code",[s._v("exit")]),s._v(" 退出容器时，docker进程也会停止，因此如果我们有需要，可以创建长期运行的容器。")]),s._v(" "),e("p",[e("code",[s._v("守护式容器")]),s._v(" 没有交互式会话（如上在执行指令后直接在终端bash交互输入），非常适合运行后台应用程序和服务。")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run --name 容器名 -d 镜像 /bin/sh -c "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"while true;do echo hello world;sleep 1;done"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("通过 "),e("code",[s._v("-d")]),s._v(" 参数，Docker会将容器放到后台运行。")]),s._v(" "),e("p",[e("code",[s._v("/bin/sh")]),s._v(" 会启动docker的bash终端，通过配合 "),e("code",[s._v('-c "shell代码"')]),s._v(" 在容器里运行了一个while循环，该循环会一直打印hello world，直到容器或进程停止运行。")]),s._v(" "),e("blockquote",[e("p",[s._v("提示："),e("a",{attrs:{href:"https://www.cnblogs.com/Coder-lp/p/13269513.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker run 命令参数及使用"),e("OutboundLink")],1)])]),s._v(" "),e("p",[s._v("通过组合使用参数，可以发现docker run命令并没有像上一个容器一样将主机的控制台附着到新的shell会话上，而是仅仅返回了一个容器ID而已。")]),s._v(" "),e("p",[s._v("如果我们也想查看该镜像的运行结果，有两种方式可以实现：")]),s._v(" "),e("ol",[e("li",[s._v("通过"),e("code",[s._v("docker attch")]),s._v("附着到容器上查看：")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" attch name/ID\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("通过"),e("code",[s._v("docker log")]),s._v("查看容器日志：")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" logs name/ID\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("img",{attrs:{src:"https://img2018.cnblogs.com/blog/967123/201812/967123-20181203010633756-66529287.png",alt:""}})]),s._v(" "),e("p",[s._v("我们还可以查看某个容器的运行进程：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")]),s._v(" name/ID\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h4",{attrs:{id:"启动已存在的容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动已存在的容器"}},[s._v("#")]),s._v(" 启动已存在的容器")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过docker ps -a即可查看容器列表，并选择想启动的容器")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" start 容器名/容器ID\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h3",{attrs:{id:"查看docker容器列表-信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看docker容器列表-信息"}},[s._v("#")]),s._v(" 查看docker容器列表/信息")]),s._v(" "),e("p",[s._v("默认情况下docker ps只能看到正在运行的容器，但是加上-a会列出所有的容器，包括正在运行的和已经停止的："),e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Huansheng1/myimg/PicGo/20210718130642.png",alt:""}})]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看运行中的docker列表")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有的docker列表（包括已停止的）")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出最后一次运行的容器，包括正在运行的和已经停止的。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" –l\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看指定容器详细信息：")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" inspect 容器名/容器ID\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[s._v("从该命令的输出结果中我们可以看到容器的很多有用信息：ID、用于创建该容器的镜像、容器最后执行的命令、创建时间以及容器的退出状态（上面退出状态为0，因为容器是通过正常的exit命令退出）")]),s._v(" "),e("h3",{attrs:{id:"进入docker容器目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#进入docker容器目录"}},[s._v("#")]),s._v(" 进入docker容器目录")]),s._v(" "),e("p",[s._v("docker类似于一个独立的系统小环境，有其单独的系统目录，我们要想查看某个镜像文件，可以进入其容器目录查看："),e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Huansheng1/myimg/PicGo/20210718131137.png",alt:""}})]),s._v(" "),e("p",[s._v("注意： "),e("code",[s._v("exec")]),s._v(" 是打开一个新的shell交互式任务， "),e("code",[s._v("attach")]),s._v(" 是附加到原有的shell终端上，这点需要注意哦。")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如：通过镜像名进入该镜像，容器id也可，另外 container也可省略")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" container "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it qinglong /bin/bash\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 也可根据CONTAINER ID进入，CONTAINER_ID通过 docker ps查看运行中的docker镜像列表查看")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" CONTAINER_ID  "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it qinglong /bin/bash\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 有种意外情况，如果/bin/bash目录被破坏了，我们后面就可用其他入口路径代替")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" container "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it qinglong "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 命令解释：docker exec -it qinglong /bin/bash 等同于 docker exec -i -t qinglong /bin/bash")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 告诉docker执行docker exec命令，并指定了-i和-t两个命令行参数，-i: 以交互模式运行容器，通常与 -t 同时使用；")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用；")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -it   //是容器具有交互性，并与终端进行连接，类似于git rebase的-i，与终端进行交互式")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[s._v("如果想查看docker某个文件内容，只需要前面就加上 "),e("code",[s._v("docker")]),s._v(" 进入容器目录的指令即可：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看文件列表")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("容器名称"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat 本来是在linux里查看指定路径的文件内容的指令，前面接上docker命令可直接查看dokcer目录内容")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it qinglong "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /ql/scritps/要查看的文件.text\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移动或者重命名")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it qinglong "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" /ql/scritps/要查看的文件.text ./new-file.text\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("进入容器目录后，我们可以通过执行容器内的 "),e("code",[s._v("linux命令")]),s._v(" 查看当前容器内的运行进程：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -elf\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("运行进程有两个特殊的进程：上面这个是我们当前运行的 "),e("code",[s._v("Bash Shell")]),s._v(" 终端, 第二个进程是临时进程，由 "),e("code",[s._v("ps -elf")]),s._v(" 这个命令产生，命令执行完进程也会结束。\n"),e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Huansheng1/myimg/PicGo/20210718132451.png",alt:""}})]),s._v(" "),e("p",[s._v("退出终端进入的容器：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意：如果在Bash Shell输入exit会退出Bash Shell，如果这时容器中没有任何进程运行，容器本身会被杀死。")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h3",{attrs:{id:"复制本地文件到docker容器目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#复制本地文件到docker容器目录"}},[s._v("#")]),s._v(" 复制本地文件到docker容器目录")]),s._v(" "),e("p",[s._v("有时候我们需要将linux本地系统的某个文件复制到docker镜像目录里，这时候也需要依靠docker指令来进行：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将当前终端本地目录的xmsport.py文件复制到运行中的镜像里的scripts目录下")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" xmsport.py 2aa8ca2c8d0a:/ql/scripts\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 情景:比如一个docker实例无法正常启动")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 我们通过：docker start 实例id -a 查看无法启动的原因，定位到要修改的配置文件")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 把docker容器中的配置文件复制到主机中")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker cp 容器id：docker容器中配置文件路径  主机路径")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker cp eaaba6bd4423:/etc/mysql/mysql.conf.d/mysqld.cnf /root/mysqld.cnf  ")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h3",{attrs:{id:"本地文件复制回容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#本地文件复制回容器"}},[s._v("#")]),s._v(" 本地文件复制回容器")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以解决容器在无法启动的情况下，修改容器中的配置文件")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker cp 主机文件路径 容器id：docker容器中配置文件路径")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker cp /root/mysqld.cnf eaaba6bd4423:/etc/mysql/mysql.conf.d/mysqld.cnf")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h3",{attrs:{id:"查看日志"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看日志"}},[s._v("#")]),s._v(" 查看日志")]),s._v(" "),e("p",[s._v("查看指定时间后的日志，只显示最后100行：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" logs -f -t --since"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2018-02-08"')]),s._v(" --tail"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" CONTAINER_ID\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("查看最近30分钟的日志:")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" logs --since 30m CONTAINER_ID\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"重启docker进程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重启docker进程"}},[s._v("#")]),s._v(" 重启docker进程")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl daemon-reload\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl restart "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("对应单个容器，我们也可以配置重启策略：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根据某个镜像创建并启动容器，设置其为守护式且如果容器意外退出了，Docker自动重新启动该容器")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run --restart"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("always --name 容器名 -d 镜像名 /bin/sh\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注，重启策略有多种，还可以这样：")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run --restart"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("on-failure:5 --name 容器名 -d 镜像名 /bin/sh\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当容器退出代码为非0时，Docker会自动重启该容器，最多重启5次。")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h3",{attrs:{id:"停止容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#停止容器"}},[s._v("#")]),s._v(" 停止容器")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" container stop 容器名/容器ID\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"删除docker镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除docker镜像"}},[s._v("#")]),s._v(" 删除docker镜像")]),s._v(" "),e("h4",{attrs:{id:"删除单个docker镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除单个docker镜像"}},[s._v("#")]),s._v(" 删除单个docker镜像")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 杀死qinglong镜像运行进程")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" qinglong\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除docker青龙镜像，可以加上-f强制参数")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" qinglong\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h4",{attrs:{id:"删除全部docker镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除全部docker镜像"}},[s._v("#")]),s._v(" 删除全部docker镜像")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#逐行输入")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a -q"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -a标志代表列出所有的容器，-q标志则表示返回容器的ID而不会返回其他信息；也可以这样写： docker container rm $(docker container ls -aq) -f ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a -q"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" rmi "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" images -q"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h3",{attrs:{id:"重装docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重装docker"}},[s._v("#")]),s._v(" 重装docker")]),s._v(" "),e("p",[s._v("这个其实就是 先执行上面的删除镜像指令，再执行 拉取镜像，然后启动镜像即可。")])])}),[],!1,null,null,null);a.default=n.exports}}]);