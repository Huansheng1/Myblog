(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{536:function(t,e,v){"use strict";v.r(e);var n=v(65),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"typescript面试题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#typescript面试题"}},[t._v("#")]),t._v(" TypeScript面试题")]),t._v(" "),v("h2",{attrs:{id:"typescript与javascript相比多了哪些数据类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#typescript与javascript相比多了哪些数据类型"}},[t._v("#")]),t._v(" TypeScript与JavaScript相比多了哪些数据类型")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("any")]),t._v("：任意类型")]),t._v(" "),v("li",[v("code",[t._v("unknown")]),t._v("：不确定类型，相对于 完全灵活等于无类型的 "),v("code",[t._v("any")]),t._v("，在赋值给其他变量时有一些额外限制，它必须赋值给"),v("code",[t._v("unknown")]),t._v("或者"),v("code",[t._v("any")]),t._v("类型的变量，避免了比如函数调用时，人家参数是个"),v("code",[t._v("string")]),t._v("，你却传入了一个"),v("code",[t._v("unknown")]),t._v("未知类型的尴尬")]),t._v(" "),v("li",[v("code",[t._v("void")]),t._v("：无返回值类型，对于函数时，用于声明该函数不会有返回值，其实可以看做函数执行完是undefined的返回值")]),t._v(" "),v("li",[v("code",[t._v("never")]),t._v("：不会发生值的类型，啥意思？用于一个函数，如 不会执行完，函数里是个死循环或者会报错，一般用"),v("code",[t._v("never")]),t._v("标识")]),t._v(" "),v("li",[v("code",[t._v("tuple")]),t._v("：元组类型")])])])}),[],!1,null,null,null);e.default=r.exports}}]);